from typing import Dict

class ThemeManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º –¥–ª—è –±–æ—Ç–∞."""
    
    LIGHT_THEME = {
        'main_emoji': 'üåû',
        'secondary_emoji': '‚ú®',
        'accent_emoji': '‚òÄÔ∏è',
        'divider': '‚îî',
        'card_emoji': 'üé¥',
        'message_emoji': 'üìú',
        'settings_emoji': '‚öôÔ∏è',
    }
    
    DARK_THEME = {
        'main_emoji': 'üåô',
        'secondary_emoji': 'üå†',
        'accent_emoji': '‚ú®',
        'divider': '‚îî',
        'card_emoji': 'üé¥',
        'message_emoji': 'üìú',
        'settings_emoji': '‚öôÔ∏è',
    }
    
    @classmethod
    def get_theme(cls, theme_name: str) -> Dict[str, str]:
        """–ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã –ø–æ –∏–º–µ–Ω–∏."""
        return cls.DARK_THEME if theme_name == "dark" else cls.LIGHT_THEME
    
    @classmethod
    def apply_theme(cls, message: str, theme_name: str) -> str:
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ç–µ–º—É –∫ —Å–æ–æ–±—â–µ–Ω–∏—é."""
        theme = cls.get_theme(theme_name)
        return message.format(**theme) 